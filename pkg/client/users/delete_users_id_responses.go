// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sm8ta/webike_user_microservice_nikita/models"
)

// DeleteUsersIDReader is a Reader for the DeleteUsersID structure.
type DeleteUsersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUsersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteUsersIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUsersIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /users/{id}] DeleteUsersID", response, response.Code())
	}
}

// NewDeleteUsersIDOK creates a DeleteUsersIDOK with default headers values
func NewDeleteUsersIDOK() *DeleteUsersIDOK {
	return &DeleteUsersIDOK{}
}

/*
DeleteUsersIDOK describes a response with status code 200, with default header values.

Пользователь удален
*/
type DeleteUsersIDOK struct {
	Payload *models.HTTPSuccessResponse
}

// IsSuccess returns true when this delete users Id o k response has a 2xx status code
func (o *DeleteUsersIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete users Id o k response has a 3xx status code
func (o *DeleteUsersIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete users Id o k response has a 4xx status code
func (o *DeleteUsersIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete users Id o k response has a 5xx status code
func (o *DeleteUsersIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete users Id o k response a status code equal to that given
func (o *DeleteUsersIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete users Id o k response
func (o *DeleteUsersIDOK) Code() int {
	return 200
}

func (o *DeleteUsersIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdOK %s", 200, payload)
}

func (o *DeleteUsersIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdOK %s", 200, payload)
}

func (o *DeleteUsersIDOK) GetPayload() *models.HTTPSuccessResponse {
	return o.Payload
}

func (o *DeleteUsersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPSuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteUsersIDUnauthorized creates a DeleteUsersIDUnauthorized with default headers values
func NewDeleteUsersIDUnauthorized() *DeleteUsersIDUnauthorized {
	return &DeleteUsersIDUnauthorized{}
}

/*
DeleteUsersIDUnauthorized describes a response with status code 401, with default header values.

Не авторизован
*/
type DeleteUsersIDUnauthorized struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this delete users Id unauthorized response has a 2xx status code
func (o *DeleteUsersIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete users Id unauthorized response has a 3xx status code
func (o *DeleteUsersIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete users Id unauthorized response has a 4xx status code
func (o *DeleteUsersIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete users Id unauthorized response has a 5xx status code
func (o *DeleteUsersIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete users Id unauthorized response a status code equal to that given
func (o *DeleteUsersIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete users Id unauthorized response
func (o *DeleteUsersIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteUsersIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdUnauthorized %s", 401, payload)
}

func (o *DeleteUsersIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdUnauthorized %s", 401, payload)
}

func (o *DeleteUsersIDUnauthorized) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *DeleteUsersIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteUsersIDForbidden creates a DeleteUsersIDForbidden with default headers values
func NewDeleteUsersIDForbidden() *DeleteUsersIDForbidden {
	return &DeleteUsersIDForbidden{}
}

/*
DeleteUsersIDForbidden describes a response with status code 403, with default header values.

Доступ запрещен
*/
type DeleteUsersIDForbidden struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this delete users Id forbidden response has a 2xx status code
func (o *DeleteUsersIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete users Id forbidden response has a 3xx status code
func (o *DeleteUsersIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete users Id forbidden response has a 4xx status code
func (o *DeleteUsersIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete users Id forbidden response has a 5xx status code
func (o *DeleteUsersIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete users Id forbidden response a status code equal to that given
func (o *DeleteUsersIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete users Id forbidden response
func (o *DeleteUsersIDForbidden) Code() int {
	return 403
}

func (o *DeleteUsersIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdForbidden %s", 403, payload)
}

func (o *DeleteUsersIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /users/{id}][%d] deleteUsersIdForbidden %s", 403, payload)
}

func (o *DeleteUsersIDForbidden) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *DeleteUsersIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
