services:
  user_microservice_container:
    build: 
      context: .
      dockerfile: ./build/app/Dockerfile
    container_name: user_microservice_container
    ports:
      - "8080:8080"
      - "50051:50051"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
  postgres:
    container_name: webike_user_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
    - "6379:6379" 
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./internal/config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./internal/config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./internal/config/promtail-config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    privileged: true

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./internal/config/loki-config.yaml:/etc/loki/local-config.yaml
volumes:
  redis-data:
  grafana-data:
  prometheusdata:
  postgres:
