// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sm8ta/webike_user_microservice_nikita/models"
)

// PostLoginReader is a Reader for the PostLogin structure.
type PostLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPostLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /login] PostLogin", response, response.Code())
	}
}

// NewPostLoginOK creates a PostLoginOK with default headers values
func NewPostLoginOK() *PostLoginOK {
	return &PostLoginOK{}
}

/*
PostLoginOK describes a response with status code 200, with default header values.

Успешная авторизация
*/
type PostLoginOK struct {
	Payload *models.HTTPSuccessResponse
}

// IsSuccess returns true when this post login o k response has a 2xx status code
func (o *PostLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post login o k response has a 3xx status code
func (o *PostLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post login o k response has a 4xx status code
func (o *PostLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post login o k response has a 5xx status code
func (o *PostLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post login o k response a status code equal to that given
func (o *PostLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post login o k response
func (o *PostLoginOK) Code() int {
	return 200
}

func (o *PostLoginOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginOK %s", 200, payload)
}

func (o *PostLoginOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginOK %s", 200, payload)
}

func (o *PostLoginOK) GetPayload() *models.HTTPSuccessResponse {
	return o.Payload
}

func (o *PostLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPSuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostLoginBadRequest creates a PostLoginBadRequest with default headers values
func NewPostLoginBadRequest() *PostLoginBadRequest {
	return &PostLoginBadRequest{}
}

/*
PostLoginBadRequest describes a response with status code 400, with default header values.

Неверный запрос
*/
type PostLoginBadRequest struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this post login bad request response has a 2xx status code
func (o *PostLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post login bad request response has a 3xx status code
func (o *PostLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post login bad request response has a 4xx status code
func (o *PostLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post login bad request response has a 5xx status code
func (o *PostLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post login bad request response a status code equal to that given
func (o *PostLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post login bad request response
func (o *PostLoginBadRequest) Code() int {
	return 400
}

func (o *PostLoginBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginBadRequest %s", 400, payload)
}

func (o *PostLoginBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginBadRequest %s", 400, payload)
}

func (o *PostLoginBadRequest) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *PostLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostLoginUnauthorized creates a PostLoginUnauthorized with default headers values
func NewPostLoginUnauthorized() *PostLoginUnauthorized {
	return &PostLoginUnauthorized{}
}

/*
PostLoginUnauthorized describes a response with status code 401, with default header values.

Неверные учетные данные
*/
type PostLoginUnauthorized struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this post login unauthorized response has a 2xx status code
func (o *PostLoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post login unauthorized response has a 3xx status code
func (o *PostLoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post login unauthorized response has a 4xx status code
func (o *PostLoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post login unauthorized response has a 5xx status code
func (o *PostLoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post login unauthorized response a status code equal to that given
func (o *PostLoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post login unauthorized response
func (o *PostLoginUnauthorized) Code() int {
	return 401
}

func (o *PostLoginUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginUnauthorized %s", 401, payload)
}

func (o *PostLoginUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /login][%d] postLoginUnauthorized %s", 401, payload)
}

func (o *PostLoginUnauthorized) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *PostLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
