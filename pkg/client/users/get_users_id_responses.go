// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sm8ta/webike_user_microservice_nikita/models"
)

// GetUsersIDReader is a Reader for the GetUsersID structure.
type GetUsersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /users/{id}] GetUsersID", response, response.Code())
	}
}

// NewGetUsersIDOK creates a GetUsersIDOK with default headers values
func NewGetUsersIDOK() *GetUsersIDOK {
	return &GetUsersIDOK{}
}

/*
GetUsersIDOK describes a response with status code 200, with default header values.

Пользователь найден
*/
type GetUsersIDOK struct {
	Payload *models.HTTPGetUserResponse
}

// IsSuccess returns true when this get users Id o k response has a 2xx status code
func (o *GetUsersIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users Id o k response has a 3xx status code
func (o *GetUsersIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users Id o k response has a 4xx status code
func (o *GetUsersIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users Id o k response has a 5xx status code
func (o *GetUsersIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users Id o k response a status code equal to that given
func (o *GetUsersIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get users Id o k response
func (o *GetUsersIDOK) Code() int {
	return 200
}

func (o *GetUsersIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdOK %s", 200, payload)
}

func (o *GetUsersIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdOK %s", 200, payload)
}

func (o *GetUsersIDOK) GetPayload() *models.HTTPGetUserResponse {
	return o.Payload
}

func (o *GetUsersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPGetUserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetUsersIDUnauthorized creates a GetUsersIDUnauthorized with default headers values
func NewGetUsersIDUnauthorized() *GetUsersIDUnauthorized {
	return &GetUsersIDUnauthorized{}
}

/*
GetUsersIDUnauthorized describes a response with status code 401, with default header values.

Не авторизован
*/
type GetUsersIDUnauthorized struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get users Id unauthorized response has a 2xx status code
func (o *GetUsersIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users Id unauthorized response has a 3xx status code
func (o *GetUsersIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users Id unauthorized response has a 4xx status code
func (o *GetUsersIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users Id unauthorized response has a 5xx status code
func (o *GetUsersIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get users Id unauthorized response a status code equal to that given
func (o *GetUsersIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get users Id unauthorized response
func (o *GetUsersIDUnauthorized) Code() int {
	return 401
}

func (o *GetUsersIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdUnauthorized %s", 401, payload)
}

func (o *GetUsersIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdUnauthorized %s", 401, payload)
}

func (o *GetUsersIDUnauthorized) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetUsersIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetUsersIDForbidden creates a GetUsersIDForbidden with default headers values
func NewGetUsersIDForbidden() *GetUsersIDForbidden {
	return &GetUsersIDForbidden{}
}

/*
GetUsersIDForbidden describes a response with status code 403, with default header values.

Доступ запрещен
*/
type GetUsersIDForbidden struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get users Id forbidden response has a 2xx status code
func (o *GetUsersIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users Id forbidden response has a 3xx status code
func (o *GetUsersIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users Id forbidden response has a 4xx status code
func (o *GetUsersIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users Id forbidden response has a 5xx status code
func (o *GetUsersIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get users Id forbidden response a status code equal to that given
func (o *GetUsersIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get users Id forbidden response
func (o *GetUsersIDForbidden) Code() int {
	return 403
}

func (o *GetUsersIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdForbidden %s", 403, payload)
}

func (o *GetUsersIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdForbidden %s", 403, payload)
}

func (o *GetUsersIDForbidden) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetUsersIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetUsersIDNotFound creates a GetUsersIDNotFound with default headers values
func NewGetUsersIDNotFound() *GetUsersIDNotFound {
	return &GetUsersIDNotFound{}
}

/*
GetUsersIDNotFound describes a response with status code 404, with default header values.

Пользователь не найден
*/
type GetUsersIDNotFound struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get users Id not found response has a 2xx status code
func (o *GetUsersIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users Id not found response has a 3xx status code
func (o *GetUsersIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users Id not found response has a 4xx status code
func (o *GetUsersIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users Id not found response has a 5xx status code
func (o *GetUsersIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get users Id not found response a status code equal to that given
func (o *GetUsersIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get users Id not found response
func (o *GetUsersIDNotFound) Code() int {
	return 404
}

func (o *GetUsersIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdNotFound %s", 404, payload)
}

func (o *GetUsersIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdNotFound %s", 404, payload)
}

func (o *GetUsersIDNotFound) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetUsersIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
